openapi: 3.0.0
info:
  title: Supermarket Controller
  version: 0.1.0
paths:
  "/users":
    get:
      summary: Get Users
      operationId: read_item_users_get
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
          example: john.doe@gmail.com
          description: The email for search
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Users
    post:
      summary: Create User
      operationId: create_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Users

  "/users/{id}":
    delete:
      operationId: delete_user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: 7c862749-d5f2-4c66-b37e-65dd4eee73ec
          description: The id to delete
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Users
  
  "/products":
    get:
      summary: Get Products
      operationId: read_item_products_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Products
    post:
      summary: Create Product
      operationId: create_product_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPost'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Products

  "/products/filter":
    get:
      summary: Get Products Filtered
      operationId: read_item_products_filtered_get
      parameters:
        - in: query
          name: description
          required: true
          schema:
            type: string
          example: Banana
          description: The description to be filtered
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Products

  "/products/{id}":
    put:
      summary: Update Product
      operationId: update_product_put
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: 7c862749-d5f2-4c66-b37e-65dd4eee73ec
          description: The id to delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPost'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Products
    delete:
      operationId: delete_product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: 7c862749-d5f2-4c66-b37e-65dd4eee73ec
          description: The id to delete
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Products
  
  "/shopping-lists":
    get:
      summary: Get Shopping Lists
      operationId: read_item_shopping_list_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingListsResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Shopping List
    post:
      summary: Create Shopping List
      operationId: create_shopping_list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingListPost'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingListResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Shopping List

  "/shopping-lists/{id}":
    delete:
      operationId: delete_shopping_list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: 7c862749-d5f2-4c66-b37e-65dd4eee73ec
          description: The id to delete
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Shopping List
  
  "/shopping-lists/{id}/description":
    patch:
      summary: Update Shopping List Description
      operationId: update_shopping_list_patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: 7c862749-d5f2-4c66-b37e-65dd4eee73ec
          description: The id to delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingListPatch'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      tags:
      - Shopping List

components:
  schemas:
    ValidationError:
      required:
        - statusCode
        - message
        - error
      type: object
      properties:
        statusCode:
          title: The HTTP status of error
          type: number
        message:
          title: Error message
          type: array
          items:
            type: string
        error:
          title: Error Type
          type: string
    UserResponse:
      type: object
      properties:
        id:
          title: User Id
          type: string
          format: uuid
        email:
          title: User Email
          type: string
          format: email
        phone:
          title: User Phone
          type: string
      required:
        - id
        - email
        - phone
    UserPost:
      type: object
      properties:
        email:
          title: User Email
          type: string
          format: email
        phone:
          title: User Phone
          type: string
      required:
        - email
        - phone

    ProductResponse:
      type: object
      properties:
        id:
          title: Product Id
          type: string
          format: uuid
        description:
          title: Product Description
          type: string
        brand:
          title: Product Brand
          type: string
        image:
          title: Product Image
          type: string
      required:
        - id
        - description
        - brand
        - image
    ProductsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            title: Product Id
            type: string
            format: uuid
          description:
            title: Product Description
            type: string
          brand:
            title: Product Brand
            type: string
          image:
            title: Product Image
            type: string
      required:
        - id
        - description
        - brand
        - image
    ProductPost:
      type: object
      properties:
        description:
          title: Product Description
          type: string
        brand:
          title: Product Brand
          type: string
        image:
          title: Product Image
          type: string
      required:
        - description
        - brand
        - image
    
    ShoppingListResponse:
      type: object
      properties:
        id:
          title: Shopping List Id
          type: string
          format: uuid
        user:
          title: User Id
          type: string
          format: uuid
        description:
          title: Shopping List Description
          type: string
        total:
          title: Shopping List Total
          type: number
      required:
        - id
        - user
        - description
        - total
    ShoppingListsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            title: Shopping List Id
            type: string
            format: uuid
          user:
            title: User Id
            type: string
            format: uuid
          description:
            title: Shopping List Description
            type: string
          total:
            title: Shopping List Total
            type: number
        required:
          - id
          - user
          - description
          - total
    ShoppingListPost:
      type: object
      properties:
        user:
          title: User Id
          type: string
          format: uuid
        description:
          title: Shopping List Description
          type: string
        total:
          title: Shopping List Total
          type: number
      required:
        - user
        - description
        - total
    ShoppingListPatch:
      type: object
      properties:
        description:
          title: Shopping List Description
          type: string
      required:
        - description